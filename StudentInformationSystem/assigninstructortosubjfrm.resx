<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="closeCMD.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAAIGNIUk0AAHolAACAgwAA+f8AAIDpAAB1
        MAAA6mAAADqYAAAXb5JfxUYAAAAJcEhZcwAACwwAAAsMAT9AIsgAAAR4SURBVEhLnZd7aFZ1HMYfL6lF
        5ehe2NXSpAtdqCyKYoX/RIaVYkYhlCGGJVF/lEWhGEUX6p+yImejxJnhoMvaclMirbRVaK5czqC80drm
        rXRzuj7Pzjl23vOec95XD3t4957f5fnev99XF0ijfpDm7JF+6pU6DwZYD17vk64GygPLWc8AFo4DI+6T
        xu6Vvjwk/c1dteBErZbW8E9fBnp5vxiMziLPITbplWAaiv2cuH+eeqSDOcSRQJ3smZ5GnkE8mPcXghnT
        pBUp97fpO0xbBnEkQDV7h8cFyCCu4P0dg6S3N0g7U+7v0kjpq6+ljiMg/4a950TkKcTW9hLw1HRpbca9
        XT73LvjkUWnDRmlPmQK0sm+MyVOek3g3AQcvyLnvD5+7CzwDFrD58yelXzZLe8sQoM1BlyA+hu+X+745
        0rqcO2p87uRw80Q+nwPVOKjhJWkTKXaghAC/s35RSO70OQPcO0Zagi17cs5W9ucojyU9FTj87wcvg6VX
        SatWSO0lyFtYN6HT50bwYr20LesMWbSStYGHiwMHLPFQcBa4BcwC74G6Z6WN/0jO6dR8pzCsui4w8cwn
        pG9z9vVwj5UrrkqhAMfzebHNBl4Fy26m0LRIu7MuXSc1Iu1Hu3JMzNrzgYFTiGNpYvNb+9vA02BRhdRU
        K23PIufi7qw14qWeICK1SxCHvh/ItuEAd2tGaPr6VyRHdFaZLXq/D1ctl04/TJqncUxz+34YcOo8AN4C
        dY9JLQfKKLf7pR3Ngf8Ln4ig1CenhoDzgNPuDfDp3dKPu3N8SiBtpSRfz14Lf3TEoeldDs8GdDpVVRJw
        EKfmOub96+PARcWk5Zg6bgn22+f21cRxRPrOHG3dexFqVJGm0YtSJo752qSngHGTpIUd0r4yAszFwlYq
        fsoh5pTT4DSTPiR9gKapabOWFktlShaax4+KmEOW+Exw+ywKxL8pPsWsfYT69+z5gm7za8ISu/jOhHUE
        wRWSjuDzTrpNXVr6MEt1fhgUGKfaO6ChStqcIF9SNjEbo/SZRMFenebPraTTa9JN7HWDsFYPgvfxy3KG
        i2SjuLWAPOljFh3+x4LR50sPN1F1kqRMo71rGGtwuiM8Ch43GE8e1BbVsNC0pXCyaeYel+HgSUmX/hJ5
        jzT3t5SWuJ0+XS1NYY8bSTJHrfm1gIamWvJ8ZXdhILrlFhKHkluDSoaAGnJwf1xTorUb81XdII9pGhJL
        s7gFLUgFIM2FF/TZC4Vu8shk4fqfyLQjr5CmNjDYJ02L5s00BozQf+mghJXixP7f+e4smAzcz2tJs/Wx
        O6dGBzz6XDOb+rtN6oqT7pC2LAzmMUe2fTggJSaSxP5uX7pqzQSLz6WlUrf9K8Kdy+k2zA6Z0pj4NUFV
        6lgmvXmZxJ9OsBZZhSaNNXxnk44Fc0ENii2KKTVef/4vSR8ati/FPAQFrpTH1MGlKlsOsV3oEjsBuJXO
        b2WGD8kb1c44w7TfOp8faZcGhC6NNlWRWdOEyCH2UvRT5hET06pmE+WbuKftP7kSylPPWM4XAAAAAElF
        TkSuQmCC
</value>
  </data>
</root>